#!/usr/bin/env python
"""
Firmware Bundle-and-Protect Tool

"""
import os
import sys
import argparse
import shutil
import struct
import json
import zlib
import hashlib
import base64
from Crypto.Cipher import AES
from cStringIO import StringIO
from intelhex import IntelHex

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Firmware Update Tool')

    parser.add_argument("--encrypted",
                        help="Path to the encrypted firmware image.",
                        required=True)
    parser.add_argument("--replacement",
                        help="Path to the replacement firmware image.",
                        required=True)
    parser.add_argument("--outfile", help="Filename for the output firmware.",
                        required=True)
    args = parser.parse_args()

    # Parse Intel hex file.
    #firmware = IntelHex(args.encrypted)

    with open(args.encrypted, 'rb') as fw_file:
        data = fw_file.read()
        data = zlib.decompress(data)
        data = json.loads(data)

    print "Old (decompressed) firmware:"
    print data

    with open(args.replacement, 'rb') as fw_file:
        evil_fw = fw_file.read()
    
    data['hex_data'] = evil_fw

    with open(args.outfile, 'wb+') as outfile:
        data = json.dumps(data)
        print "\nNew (decompressed) firmware:"
        print data
        data = zlib.compress(data)
        outfile.write(data)

    
