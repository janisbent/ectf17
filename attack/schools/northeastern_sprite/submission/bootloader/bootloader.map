Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
                              sha1.o (__udivmodqi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                              bootloader.o (__udivmodsi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              bootloader.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
                              sha1.o (__bswapsi2)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
                              sha1.o (__prologue_saves__)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
                              config.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
                              sha1.o (__adddi3)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_byte.o)
                              config.o (eeprom_read_byte)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_word.o)
                              bootloader.o (eeprom_read_word)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_byte.o)
                              config.o (eeprom_update_byte)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_word.o)
                              bootloader.o (eeprom_update_word)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_block.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_word.o) (eeprom_read_blraw)

Allocating common symbols
Common symbol       size              file

umsg                0x91              bootloader.o
keys                0x64              bootloader.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
Address of section .text set to 0x1e000
LOAD uart.o
LOAD sys_startup.o
LOAD config.o
LOAD sha1.o
LOAD crypto.o
LOAD message.o
LOAD readback.o
LOAD firmware.o
LOAD bootloader.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ff00                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xff00
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x000000000001e000     0x1bae
 *(.vectors)
 .vectors       0x000000000001e000        0xe sys_startup.o
                0x000000000001e000                __Init
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000001e00e                . = ALIGN (0x2)
                0x000000000001e00e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000001e00e        0x0 linker stubs
 *(.trampolines*)
                0x000000000001e00e                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x000000000001e00e      0x110 crypto.o
                0x000000000001e00e                sub_polynomials
                0x000000000001e0fe                public_b
                0x000000000001e10e                public_a
                0x000000000001e11e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000001e11e                __ctors_start = .
 *(.ctors)
                0x000000000001e11e                __ctors_end = .
                0x000000000001e11e                __dtors_start = .
 *(.dtors)
                0x000000000001e11e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000001e11e        0x0 sys_startup.o
                0x000000000001e11e                __do_copy_data
 .init4         0x000000000001e11e       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x000000000001e11e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000001e12e        0x4 sys_startup.o
                0x000000000001e12e                __jumpMain
 *(.init9)
 *(.text)
 .text          0x000000000001e132       0xec uart.o
                0x000000000001e132                UART1_init
                0x000000000001e154                UART1_putchar
                0x000000000001e162                UART1_data_available
                0x000000000001e16e                UART1_getchar
                0x000000000001e17c                UART1_flush
                0x000000000001e18c                UART1_putstring
                0x000000000001e1a8                UART0_init
                0x000000000001e1ca                UART0_putchar
                0x000000000001e1d8                UART0_data_available
                0x000000000001e1e4                UART0_getchar
                0x000000000001e1f2                UART0_flush
                0x000000000001e202                UART0_putstring
 .text          0x000000000001e21e        0x0 sys_startup.o
 .text          0x000000000001e21e       0x84 config.o
                0x000000000001e21e                config_init
                0x000000000001e272                config_update_seed
 .text          0x000000000001e2a2      0x876 sha1.o
                0x000000000001e2a2                sha1_watchdog_reset
                0x000000000001e2a6                rotl32
                0x000000000001e2de                change_endian32
                0x000000000001e2e4                ch
                0x000000000001e33e                maj
                0x000000000001e398                parity
                0x000000000001e3ce                sha1_init
                0x000000000001e434                sha1_nextBlock
                0x000000000001e90a                sha1_lastBlock
                0x000000000001ea58                sha1_ctx2hash
                0x000000000001ea9a                sha1
 .text          0x000000000001eb18      0x666 crypto.o
                0x000000000001eb18                load_public_a
                0x000000000001eb42                load_public_b
                0x000000000001eb6c                load_sub_polynomial
                0x000000000001eb8c                crypt_watchdog_reset
                0x000000000001eb90                init_block
                0x000000000001eba4                copy_block
                0x000000000001ebd8                xor_blocks
                0x000000000001ebfe                add_coefficients
                0x000000000001ec02                multiply_coefficients
                0x000000000001ec22                reduce_polynomial
                0x000000000001ed04                multiply_polynomials
                0x000000000001ed6a                generate_random_keys
                0x000000000001ee66                generate_encryption_key
                0x000000000001eee0                crypt_init
                0x000000000001ef2a                crypt_encrypt
                0x000000000001f054                crypt_decrypt
 .text          0x000000000001f17e       0x78 message.o
                0x000000000001f17e                send_message
                0x000000000001f1b8                recv_message
 .text          0x000000000001f1f6      0x18c readback.o
                0x000000000001f1f6                compare_blocks
                0x000000000001f218                extract_uint32_t
                0x000000000001f27e                rdb_load_addr
                0x000000000001f288                rdb_load_size
                0x000000000001f292                rdb_send_auth_random
                0x000000000001f2d0                rdb_verify_auth_hash
                0x000000000001f360                rdb_send_enc_data
 .text          0x000000000001f382       0x8c firmware.o
                0x000000000001f382                fw_load_constant
                0x000000000001f38a                fw_load_num_frames
                0x000000000001f392                fw_load_version
                0x000000000001f39a                fw_load_fw_size
                0x000000000001f3a2                fw_decrypt_and_integrity
 .text          0x000000000001f40e      0x5de bootloader.o
                0x000000000001f40e                random_delay
                0x000000000001f4b2                reset_board
                0x000000000001f4b4                readback
                0x000000000001f5ce                boot_firmware
                0x000000000001f636                program_flash
                0x000000000001f6f2                load_firmware
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_byte.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_word.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_byte.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_word.o)
 .text          0x000000000001f9ec        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_block.o)
                0x000000000001f9ec                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000001f9ec       0x6c bootloader.o
                0x000000000001f9ec                main
 .text.libgcc.mul
                0x000000000001fa58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x000000000001fa58       0x18 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
                0x000000000001fa58                __udivmodqi4
 .text.libgcc   0x000000000001fa70        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x000000000001fa70        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x000000000001fa70        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x000000000001fa70        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x000000000001fa70        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x000000000001fa70        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x000000000001fa70       0x44 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x000000000001fa70                __udivmodsi4
 .text.libgcc   0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text.libgcc.div
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text.libgcc   0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text.libgcc.prologue
                0x000000000001fab4        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text.libgcc.builtins
                0x000000000001fab4        0xe /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
                0x000000000001fab4                __bswapsi2
 .text.libgcc.fmul
                0x000000000001fac2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text.libgcc.fixed
                0x000000000001fac2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .text.libgcc.mul
                0x000000000001fac2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x000000000001fac2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text.libgcc   0x000000000001fac2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x000000000001fac2       0x38 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
                0x000000000001fac2                __prologue_saves__
 .text.libgcc.builtins
                0x000000000001fafa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x000000000001fafa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x000000000001fafa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x000000000001fafa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x000000000001fafa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text.libgcc   0x000000000001fafa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x000000000001fafa       0x36 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
                0x000000000001fafa                __epilogue_restores__
 .text.libgcc.builtins
                0x000000000001fb30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x000000000001fb30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x000000000001fb30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .text.libgcc.mul
                0x000000000001fb30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text.libgcc.div
                0x000000000001fb30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text.libgcc   0x000000000001fb30       0x12 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
                0x000000000001fb30                __adddi3
 .text.libgcc.prologue
                0x000000000001fb42        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text.libgcc.builtins
                0x000000000001fb42        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text.libgcc.fmul
                0x000000000001fb42        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text.libgcc.fixed
                0x000000000001fb42        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .text.avr-libc
                0x000000000001fb42       0x10 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_byte.o)
                0x000000000001fb42                eeprom_read_byte
 .text.avr-libc
                0x000000000001fb52        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_word.o)
                0x000000000001fb52                eeprom_read_word
 .text.avr-libc
                0x000000000001fb5e       0x24 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_byte.o)
                0x000000000001fb5e                eeprom_update_byte
                0x000000000001fb60                eeprom_update_r18
 .text.avr-libc
                0x000000000001fb82        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_word.o)
                0x000000000001fb82                eeprom_update_word
 .text.avr-libc
                0x000000000001fb8e       0x20 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_block.o)
                0x000000000001fb8e                eeprom_read_block
                0x000000000001fb92                eeprom_read_blraw
                0x000000000001fbae                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x000000000001fbae                _etext = .

.data           0x0000000000800100        0x0 load address 0x000000000001fbae
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 uart.o
 .data          0x0000000000800100        0x0 sys_startup.o
 .data          0x0000000000800100        0x0 config.o
 .data          0x0000000000800100        0x0 sha1.o
 .data          0x0000000000800100        0x0 crypto.o
 .data          0x0000000000800100        0x0 message.o
 .data          0x0000000000800100        0x0 readback.o
 .data          0x0000000000800100        0x0 firmware.o
 .data          0x0000000000800100        0x0 bootloader.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_byte.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_word.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_byte.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_word.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_block.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100       0xf5
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 uart.o
 .bss           0x0000000000800100        0x0 sys_startup.o
 .bss           0x0000000000800100        0x0 config.o
 .bss           0x0000000000800100        0x0 sha1.o
 .bss           0x0000000000800100        0x0 crypto.o
 .bss           0x0000000000800100        0x0 message.o
 .bss           0x0000000000800100        0x0 readback.o
 .bss           0x0000000000800100        0x0 firmware.o
 .bss           0x0000000000800100        0x0 bootloader.o
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_bswapsi2.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_prologue.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_epilogue.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_adddi3.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_byte.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_word.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_byte.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eeupd_word.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega1284p.a(eerd_block.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800100       0xf5 bootloader.o
                0x0000000000800100                umsg
                0x0000000000800191                keys
                0x00000000008001f5                PROVIDE (__bss_end, .)
                0x000000000001fbae                __data_load_start = LOADADDR (.data)
                0x000000000001fbae                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001f5        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008001f5                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x4
 *(.eeprom*)
 .eeprom        0x0000000000810000        0x4 bootloader.o
                0x0000000000810000                fw_size
                0x0000000000810002                fw_version
                0x0000000000810004                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x4ecc
 *(.stab)
 .stab          0x0000000000000000      0x9b4 uart.o
 .stab          0x00000000000009b4      0x3a8 sys_startup.o
                                        0x570 (size before relaxing)
 .stab          0x0000000000000d5c      0x45c config.o
                                        0x624 (size before relaxing)
 .stab          0x00000000000011b8      0xc60 sha1.o
                                        0xe40 (size before relaxing)
 .stab          0x0000000000001e18     0x1080 crypto.o
                                       0x126c (size before relaxing)
 .stab          0x0000000000002e98      0x474 message.o
                                        0x690 (size before relaxing)
 .stab          0x000000000000330c      0x6d8 readback.o
                                        0x8f4 (size before relaxing)
 .stab          0x00000000000039e4      0x4ec firmware.o
                                        0x6a8 (size before relaxing)
 .stab          0x0000000000003ed0      0xffc bootloader.o
                                       0x1230 (size before relaxing)

.stabstr        0x0000000000000000     0x1ea9
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1ea9 uart.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 sys_startup.o
 .comment       0x0000000000000011       0x12 config.o
 .comment       0x0000000000000011       0x12 sha1.o
 .comment       0x0000000000000011       0x12 crypto.o
 .comment       0x0000000000000011       0x12 message.o
 .comment       0x0000000000000011       0x12 readback.o
 .comment       0x0000000000000011       0x12 firmware.o
 .comment       0x0000000000000011       0x12 bootloader.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(bootloader.elf elf32-avr)
LOAD linker stubs
